plugins {
  id 'com.github.johnrengelman.shadow' version '7.1.0'
  id 'java'
  id 'maven-publish'
  id 'nebula.rpm' version '8.4.1'
}

group = 'trust.nccgroup'
version = '1.1.0'

sourceCompatibility = 1.6
targetCompatibility = 1.6

repositories {
  mavenCentral()
}

dependencies {
  implementation group: 'net.bytebuddy', name: 'byte-buddy', version: '[1.12.0, 1.13)'
}


sourceSets {
  main {
    java {
      srcDirs = ['./src']
    }

    resources {
      srcDirs = ['./res']
    }
  }
}

jar {
  manifest {
    attributes (
      "Manifest-Version": "1.0",
      "Can-Redefine-Classes": "true",
      "Can-Retransform-Classes": "true",
      "Can-Set-Native-Method-Prefix": "true",
      "Premain-Class": "trust.nccgroup.jndibegone.PreMain",
      "Agent-Class": "trust.nccgroup.jndibegone.AgentMain"
    )
  }
}


compileJava {
  options.compilerArgs << '-Xlint:unchecked'
}

task sourceJar(type: Jar) {
  from sourceSets.main.allJava
  classifier = 'sources'
}

task javadocJar(type: Jar) {
  from javadoc
  classifier = 'javadoc'
}

artifacts {
  archives javadocJar, sourceJar
}

shadowJar {
  // removes -all from the build
  classifier = 'standalone'
  //classifier = ''
  relocate 'net.bytebuddy', 'trust.nccgroup.jndibegone.vendor.net.bytebuddy'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        //shadow(MavenPublication) { publication ->
            //project.shadow.component(publication)

            pom {
                name = 'log4j-jndi-be-gone'
                description = 
                url = 'https://github.com/nccgroup/log4j-jndi-be-gone'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'chaosdata'
                        name = 'Jeff Dileo'
                        email = 'jeff.dileo@nccgroup.com'
                    }
                }
                scm {
                    url = 'https://github.com/nccgroup/log4j-jndi-be-gone'
                    connection = 'scm:git:git://github.com/nccgroup/log4j-jndi-be-gone.git'
                    developerConnection = 'scm:git:ssh:git@github.com:nccgroup/log4j-jndi-be-gone.git'
                }
            }
        }
    }
}

project.ext { 
	packageName = "jndibegone"
}

assert project.ext.packageName == "jndibegone"

task simpleRpm (type: Rpm) {
	dependsOn jar
	
	project.ext {
		packageSuffix = ''
		deliverable = "${project.name}-${project.version}${project.ext.packageSuffix}.jar"
	}

	assert project.ext.packageSuffix == ''
	assert project.ext.deliverable == "${project.name}-${project.version}${project.ext.packageSuffix}.jar"

  packageName "${project.ext.packageName}${project.ext.packageSuffix}"
  version 
  release '1'
  arch 'noarch'
  os LINUX
		
  postInstall file('scripts/rpm/postinstall.sh')
  postUninstall file('scripts/rpm/postremove.sh')

  from(jar.outputs.files) {
    addParentDirs = false
    into '/opt/jndibegone'
    include "${project.ext.deliverable}"
  }

  from('.') {
		addParentDirs = false
		into '/opt/jndibegone'
		include 'AUTHORS'
		include 'LICENSE'
		include 'README.md'  
  }

  from('scripts/conf/jndibegone.sh') {
    addParentDirs = false
    into '/etc/profile.d'
    expand(deliverable: "${project.ext.deliverable}")
  }

  from('scripts/conf/jndibegone.conf') {
    addParentDirs = false
    into '/etc/systemd/system/system.conf.d'
    expand(deliverable: "${project.ext.deliverable}")
  }
  
}

task shadowRpm (type: Rpm) {
	dependsOn shadowJar
	project.ext {
		packageSuffix = "-standalone"
		deliverable = "${project.name}-${project.version}${project.ext.packageSuffix}.jar"
	}
	
	assert project.ext.packageSuffix == "-standalone"
	assert project.ext.deliverable == "${project.name}-${project.version}${project.ext.packageSuffix}.jar"

  packageName "${project.ext.packageName}${project.ext.packageSuffix}"
  version 
  release '1'
  arch 'noarch'
  os LINUX
		
  postInstall file('scripts/rpm/postinstall.sh')
  postUninstall file('scripts/rpm/postremove.sh')

  from(shadowJar.outputs.files) {
    addParentDirs = false
    into '/opt/jndibegone'
    include "${project.ext.deliverable}"
  }

  from('.') {
		addParentDirs = false
		into '/opt/jndibegone'
		include 'AUTHORS'
		include 'LICENSE'
		include 'README.md'  
  }
  
  from('scripts/conf/jndibegone.sh') {
    addParentDirs = false
    into '/etc/profile.d'
    expand(deliverable: "${project.ext.deliverable}")
  }

  from('scripts/conf/jndibegone.conf') {
    addParentDirs = false
    into '/etc/systemd/system/system.conf.d'
    expand(deliverable: "${project.ext.deliverable}")
  }
}

defaultTasks "jar", "shadowJar", "publishToMavenLocal"